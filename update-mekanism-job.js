const { createClient } = require('@supabase/supabase-js');
const fs = require('fs');

// Supabase configuration
const supabaseUrl = 'http://localhost:54321';
const supabaseServiceKey = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZS1kZW1vIiwicm9sZSI6InNlcnZpY2Vfcm9sZSIsImV4cCI6MTk4MzgxMjk5Nn0.EGIM96RAZx35lJzdJsyH-qQwv8Hdp7fsn3W0YpN81IU';

const supabase = createClient(supabaseUrl, supabaseServiceKey);

async function updateMekanismJob() {
  try {
    console.log('üîÑ B·∫Øt ƒë·∫ßu c·∫≠p nh·∫≠t job Mekanism PPC Specialist...');
    
    // ƒê·ªçc file JSON ƒë√£ s·ª≠a
    const jobData = JSON.parse(fs.readFileSync('Jobs Listing/Mekanism_PPC_Specialist.json', 'utf8'));
    
    // X√≥a job c≈©
    const { error: deleteError } = await supabase
      .from('jobs')
      .delete()
      .eq('title', 'Pay-Per-Click Specialist (PPC Specialist)')
      .eq('company', 'Mekanism PPC India');
    
    if (deleteError) {
      console.error('‚ùå L·ªói khi x√≥a job c≈©:', deleteError.message);
      return;
    }
    
    console.log('‚úÖ ƒê√£ x√≥a job c≈©');
    
    // Chu·∫©n b·ªã d·ªØ li·ªáu cho database
    const jobToInsert = {
      title: jobData.title,
      company: jobData.company,
      location: jobData.location,
      type: jobData.type.toLowerCase().replace(' ', '-'),
      work_model: jobData.work_model,
      salary_min: jobData.salary_min,
      salary_max: jobData.salary_max,
      description: jobData.description,
      requirements: jobData.requirements,
      benefits: jobData.benefits,
      is_verified: jobData.verified || false,
      is_active: true,
      level: jobData.level || 'Mid Level'
    };
    
    // Insert job m·ªõi
    const { data, error } = await supabase
      .from('jobs')
      .insert(jobToInsert)
      .select()
      .single();
    
    if (error) {
      console.error('‚ùå L·ªói khi post job m·ªõi:', error.message);
    } else {
      console.log('‚úÖ ƒê√£ c·∫≠p nh·∫≠t th√†nh c√¥ng: Pay-Per-Click Specialist t·∫°i Mekanism PPC India');
      console.log('üìù N·ªôi dung ƒë√£ ƒë∆∞·ª£c s·ª≠a:');
      console.log('   - M·ª•c "Who You Are" gi·ªù m√¥ t·∫£ profile ·ª©ng vi√™n l√Ω t∆∞·ªüng');
      console.log('   - Kh√¥ng c√≤n tr√πng l·∫∑p v·ªõi ph·∫ßn requirements');
      console.log('   - N·ªôi dung phong ph√∫ v√† h·∫•p d·∫´n h∆°n');
    }
    
  } catch (error) {
    console.error('‚ùå L·ªói chung:', error.message);
  }
}

// Ch·∫°y script
updateMekanismJob(); 