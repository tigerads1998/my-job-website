const { createClient } = require('@supabase/supabase-js');

// S·ª≠ d·ª•ng client th∆∞·ªùng nh∆∞ frontend
const supabase = createClient(
  'http://localhost:54321',
  'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZS1kZW1vIiwicm9sZSI6ImFub24iLCJleHAiOjE5ODM4MTI5OTZ9.CRXP1A7WOeoJeXxjNni43kdQwgnWNReilDMblYTn_I0'
);

async function checkVerifiedJobs() {
    console.log('üîç Checking verified jobs...');
    
    try {
        // L·∫•y t·∫•t c·∫£ jobs nh∆∞ frontend s·∫Ω l√†m
        const { data: jobs, error } = await supabase
            .from('jobs')
            .select('*')
            .eq('is_active', true)
            .order('created_at', { ascending: false });

        if (error) {
            console.log('‚ùå Error:', error.message);
            return;
        }

        console.log('üìä Total jobs found:', jobs.length);
        
        jobs.forEach(job => {
            console.log(`\nüìù Job: ${job.title}`);
            console.log(`   Company: ${job.company}`);
            console.log(`   Location: ${job.location}`);
            console.log(`   ‚úÖ Is Verified: ${job.is_verified}`);
            console.log(`   ID: ${job.id}`);
        });

        // Ki·ªÉm tra c·ª• th·ªÉ job "Hiring"
        const hiringJob = jobs.find(job => job.title === 'Hiring');
        if (hiringJob) {
            console.log('\nüéØ Found "Hiring" job:');
            console.log('   Verified status:', hiringJob.is_verified);
            console.log('   Should show verified icon:', hiringJob.is_verified ? 'YES' : 'NO');
        } else {
            console.log('\n‚ùå "Hiring" job not found in active jobs');
        }

    } catch (err) {
        console.log('‚ùå Error:', err.message);
    }
}

checkVerifiedJobs(); 